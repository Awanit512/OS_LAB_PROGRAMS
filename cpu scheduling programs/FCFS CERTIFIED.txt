


#include<stdio.h>

struct process{
    int id,at, tat, wt , bt,ct,cit;
};
struct process p[100];

int main()
{int total=0;
    int n;
    printf("\n ENTER THE NUMBER OF PROCESS IN READDY QUEUE:  ");
    scanf("%d",&n);
    int i,j;
    for(i=0 ;i<n ;i++)
    {
        p[i].id = i+1;
        printf("\nENTER THE ARRIVING TIME OF PROCESS[%d]:  ",p[i].id);
        scanf("%d",&p[i].at);
        printf("\nENTER THE BUSRT TIME OF PROCESS[%d]:  ", p[i].id);
        scanf("%d",&p[i].bt);
    }
    struct process temp;
    for(i=0;i<n ;i++)
    {
        for (j=i+1;j<n;j++)
        {
            if(p[i].at>p[j].at)
            {
                temp= p[i];
                p[i]= p[j];
                p[j]=temp;
            }
        }
    }
    for(i=0;i<n;i++)
    {
        printf("\nSEQUENCE OF PROCESS FOR EXECUTION : %d",p[i].id);
    }
    int sum=0;
    int flag=0;
    p[0].cit = 0;
    if(p[0].at!=0)
    {
        p[0].ct = p[0].bt +p[0].at;
        sum = p[0].ct;
        p[0].tat = p[0].ct - p[0].at;
        p[0].wt = p[0].tat - p[0].bt;
        p[0].cit=p[0].at;
    }
    else{
        for(i=0;i<n ;i++)
        {
             sum = sum+ p[i].bt;
             p[i].ct = sum ;
             p[i].tat = p[i].ct - p[i].at;
             p[i].wt = p[i].tat - p[i].bt;
        }
        flag=1;
    }
    if(flag==0)
    {
        for(i=1;i<n ;i++)
        {
             sum = sum+ p[i].bt;
             p[i].ct = sum ;
             p[i].tat = p[i].ct - p[i].at;
             p[i].wt = p[i].tat - p[i].bt;
        }
    }
    p[0].wt=0;
    int cputime=0;
    for(i=0;i<n;i++)
    {
        p[i+1].cit=0;
        if(p[i].ct < p[i+1].at)
        {
            p[i+1].cit = p[i+1].at - p[i].ct;
            cputime+=p[i+1].cit;
            p[i+1].ct = p[i+1].ct + cputime;
            p[i+1].tat = p[i+1].ct - p[i+1].at;
             p[i+1].wt = 0;
        }
        else
        {
            p[i+1].ct = p[i+1].ct + cputime;
            p[i+1].tat = p[i+1].ct - p[i+1].at;
            p[i+1].wt = p[i+1].tat - p[i+1].bt;
        }
    }



    printf("\nPROCESS NUMBER    ARRIVAL TIME    BURST TIME      COMPLITION TIME       TURN AROUND TIME        WAITING TIME      CPU REST TIME");
    for(i=0;i<n;i++)
printf("\np[%d]              %2d              %2d                %2d                         %2d                 %2d                   %2d",p[i].id,p[i].at,p[i].bt,p[i].ct,p[i].tat,p[i].wt,p[i].cit);


for(i=0;i<n;i++)
    total+=p[i].cit;

    printf("\n\ncontect switch =%d\t\t cpu ideal total =%d\n\n",n-1,total);
    return 0;
}

